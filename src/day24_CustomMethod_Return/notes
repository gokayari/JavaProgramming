method: grouping code fragments ===> creating a function

			advantage: improves the re-usability of our codes


			                             MUST       MUST
		Access-Modifier   specifier   return-type  name  (Parameter){

					code fragments
        }

		Access modifier: public
				public: ALWAYS ACCESSIBLE

		Specifier: static
				static: method can be called through its class name


		ReturnType: void, any dataType
				void: does not return a value
				any dataType: MUST return a value

		Parameter: any dataType (if the method needs additional info)

		Method Name: meaningful, descriptive


		===============

		What's return method?


        return method: return type is not void
        				MUST return a value


        return statement: used for exiting the method
        				 we can use it for returning a value from return methods

        ========================

        branching statements:
        	continue: skipping the current iteration
        	break: exits the loop or switch
        	return: exiting the method (one method, current method)
        	System.exit(0): exits the system (EVERY THING WILL BE TERMINATED)

